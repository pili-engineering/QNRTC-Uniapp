<template>
<view class="wrap">
	<uni-fab horizontal="right" :content="content" @trigger="handleChooseItem"></uni-fab>
    <u-button type="primary" @click="routeGroupToGroup" text="多人通讯"></u-button>
    <u-button type="primary" class="margin-top-sm" @click="routeLiveStreamingDirect"  text="单路转推配置"></u-button>
    <u-button type="primary" class="margin-top-sm" @click="routeLiveStreamingTranscoding" text="合流配置"></u-button>
    <u-button type="primary" class="margin-top-sm" @click="routeTrackSetting" text="单人通讯">单人通讯</u-button>
	<u-button type="primary" class="margin-top-sm" @click="routeNewAudioMusicMixer" text="混音音乐设置"></u-button>
	<u-button type="primary" class="margin-top-sm" @click="routeNewAudioEffectMixer" text="混音音效设置"></u-button>
</view>
</template>

<script>
import { QNRTC } from "@/js_sdk/QNRTC-UniPlugin-JS/QNRTC-UniPlugin-JS/RTCIndex.native.js"
import {
    mapState
} from "vuex"
export default {
    computed: {
			...mapState(["platform"])
		},
	data() {
		return {
			content: [
				{
					iconPath: "/static/template.png",
					selectedIconPath: "/static/template.png",
					text: "设置"
				}
			]
		}
	},
    methods: {
        routeGroupToGroup() {
            uni.navigateTo({
                url: "/pages/group-to-group/index"
            })
        },
        routeLiveStreamingDirect() {
            uni.navigateTo({
                url: "/pages/live-streaming-direct/index"
            })
        },
        routeLiveStreamingTranscoding() {
            uni.navigateTo({
                url: "/pages/live-streaming-transcoding/index"
            })
        },
        routeTrackSetting() {
            uni.navigateTo({
                url: "/pages/track-setting/index"
            })
        },
		routeNewAudioMusicMixer() {
			uni.navigateTo({
				url: "/pages/audio-music-mixer/index"
			})
		},
		routeNewAudioEffectMixer() {
			uni.navigateTo({
				url: "/pages/audio-effect-mixer/index"
			})
		},
		handleChooseItem(event) {
			if(event.item.text === "设置") {
				uni.navigateTo({
					url: "/pages/setting/index"
				})
			}
		},
        requestPermission() {
            const permission = ["android.permission.CAMERA", "android.permission.RECORD_AUDIO",
                "android.permission.WRITE_EXTERNAL_STORAGE"
            ]
            if (plus.android) {
                for (const i of permission) {
                    plus.android.requestPermissions(
                        [i],
                        function (resultObj) {
                            for (var i = 0; i < resultObj.granted.length; i++) {
                                var grantedPermission = resultObj.granted[i];
                                console.log('已获取的权限：' + grantedPermission);
                            }
                            for (var i = 0; i < resultObj.deniedPresent.length; i++) {
                                var deniedPresentPermission = resultObj.deniedPresent[i];
                                console.log('拒绝本次申请的权限：' + deniedPresentPermission);
                            }
                            for (var i = 0; i < resultObj.deniedAlways.length; i++) {
                                var deniedAlwaysPermission = resultObj.deniedAlways[i];
                                console.log('永久拒绝申请的权限：' + deniedAlwaysPermission);
                            }
                        },
                        function (error) {
                            console.log('申请权限错误：' + error.code + " = " + error.message);
                        }
                    );
                }
            }

        }
    },
    created() {
        if(this.platform = "android") {
            this.requestPermission()
        }
    }
}
</script>
<style>
	.wrap {
		border-radius: 5px;
		margin: 0 20px 20px;
		padding: 10px 0;
	}
	.test {
		color: red!important;
		font-size: 24upx;
	}
</style>
